unit untCPedidoProduto;

interface

uses System.SysUtils, Data.Win.ADODB, untDataModuleWK, untCProduto;

 type TpedidoProduto = class

    private

    FGetidpedidoproduto: Integer;
    FGetidpedido: Integer;
    FGetidproduto: Integer;
    FGetquantidade: Double;
    FGetvalorunit: Double;
    FGetvalortotalproduto: Double;

    procedure Setidpedidoproduto(const Value: Integer);
    procedure Setidpedido(const Value: Integer);
    procedure Setidproduto(const Value: Integer);
    procedure Setquantidade(const Value: Double);
    procedure Setvalorunit(const Value: Double);
    procedure Setvalortotalproduto(const Value: Double);

    protected


    Public

    property Getidpedidoproduto : Integer read FGetidpedidoproduto write Setidpedidoproduto;
    property Getidpedido : Integer read FGetidpedido write Setidpedido;
    property Getidproduto   : Integer read FGetidproduto write Setidproduto;
    property Getquantidade  :Double read FGetquantidade write Setquantidade;
    property Getvalorunit  : Double read FGetvalorunit write Setvalorunit;
    property Getvalortotalproduto  : Double read FGetvalortotalproduto write Setvalortotalproduto;

    function ConsultarPedidoProduto : Boolean;
    function ConsultaProduto : Boolean;

    Constructor Create;    // declaração do metodo construtor

    Destructor  Destroy; Override;

    function SalvarPedidoProduto : Boolean;
    end;

implementation


{ TpedidoProduto }

function TpedidoProduto.ConsultaProduto: Boolean;
var
    ibQueryGenerica : TADOQuery;
begin
  ibQueryGenerica := TADOQuery.Create(nil);

  ibQueryGenerica.Connection := DataModuleWK.ADOConnectionwk;
  ibQueryGenerica.SQL.Add('SELECT idproduto, descricao, precovenda FROM cadproduto where idproduto = ' + IntToStr(FGetidproduto));
  ibQueryGenerica.Open;

  if ibQueryGenerica.IsEmpty then
    begin
      FGetidproduto := ibQueryGenerica.fieldbyname('idproduto').AsInteger;
      Result := True;
    end
  else
    Result := False;

end;

function TpedidoProduto.ConsultarPedidoProduto: Boolean;
var
    ibQueryGenerica : TADOQuery;
begin
  ibQueryGenerica := TADOQuery.Create(nil);

  ibQueryGenerica.Connection := DataModuleWK.ADOConnectionwk;
  ibQueryGenerica.SQL.Add('SELECT idpedidoproduto FROM cadpedidoproduto where idpedidoproduto = ' + IntToStr(FGetidpedidoproduto));
  ibQueryGenerica.Open;

  if ibQueryGenerica.IsEmpty then
    Result := True
  else
    Result := False;
end;

constructor TpedidoProduto.Create;
begin

  FGetidpedido := 0;
  FGetidpedidoproduto := 0;
  FGetidproduto := 0;
  FGetquantidade := 0;
  FGetvalorunit := 0;
  FGetvalortotalproduto := 0;
end;

destructor TpedidoProduto.Destroy;
begin
  //destroi
  inherited;
end;

function TpedidoProduto.SalvarPedidoProduto: Boolean;
var
    ibQueryGenerica : TADOQuery;
begin

  ibQueryGenerica := TADOQuery.Create(nil);
  ibQueryGenerica.Connection := DataModuleWK.ADOConnectionwk;

  if ConsultarPedidoProduto then
    begin

      ibQueryGenerica.SQL.Add('INSERT INTO cadpedidoproduto');
      ibQueryGenerica.SQL.Add('(');
      ibQueryGenerica.SQL.Add('idpedido,');
      ibQueryGenerica.SQL.Add('idproduto,');
      ibQueryGenerica.SQL.Add('quantidade,');
      ibQueryGenerica.SQL.Add('valorunit,');
      ibQueryGenerica.SQL.Add('valortotalproduto)');
      ibQueryGenerica.SQL.Add('VALUES (');
      ibQueryGenerica.SQL.Add(IntToStr(FGetidpedido) + ',');
      ibQueryGenerica.SQL.Add(IntToStr(FGetidproduto) + ',');
      ibQueryGenerica.SQL.Add(FloatToStr(FGetquantidade)+ ',');
      ibQueryGenerica.SQL.Add(FloatToStr(FGetvalorunit)+ ',');
      ibQueryGenerica.SQL.Add(FloatToStr(FGetvalortotalproduto)+ ')');
    end
  else
    begin
      ibQueryGenerica.SQL.Add('UPDATE cadpedidoproduto SET');
      ibQueryGenerica.SQL.Add('idpedido = ' + IntToStr(FGetidpedido) + ',');
      ibQueryGenerica.SQL.Add('idproduto = ' + IntToStr(FGetidproduto) + ',');
      ibQueryGenerica.SQL.Add('quantidade = ' + FloatToStr(FGetquantidade) + ',');
      ibQueryGenerica.SQL.Add('valorunit = ' + FloatToStr(FGetvalorunit)+ ',');
      ibQueryGenerica.SQL.Add('valortotalproduto = ' + FloatToStr(FGetvalortotalproduto));
      ibQueryGenerica.SQL.Add('WHERE idpedidoproduto = ' + IntToStr(FGetidpedidoproduto));
    end;

  ibQueryGenerica.ExecSQL;

  FreeAndNil(ibQueryGenerica);

  Result := True;

end;

procedure TpedidoProduto.Setidpedidoproduto(const Value: Integer);
begin
  FGetidpedidoproduto := Value;
end;

procedure TpedidoProduto.Setidpedido(const Value: Integer);
begin
  FGetidpedido := Value;
end;

procedure TpedidoProduto.Setidproduto(const Value: Integer);
begin
  FGetidproduto := Value;
end;

procedure TpedidoProduto.Setquantidade(const Value: Double);
begin
  FGetquantidade := Value;
end;

procedure TpedidoProduto.Setvalortotalproduto(const Value: Double);
begin
  FGetvalortotalproduto := Value;
end;

procedure TpedidoProduto.Setvalorunit(const Value: Double);
begin
  FGetvalorunit := Value;
end;

end.
